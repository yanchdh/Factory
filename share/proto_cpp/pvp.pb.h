// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pvp.proto

#ifndef PROTOBUF_pvp_2eproto__INCLUDED
#define PROTOBUF_pvp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "classicddz.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pvp_2eproto();
void protobuf_AssignDesc_pvp_2eproto();
void protobuf_ShutdownFile_pvp_2eproto();

class msg_request_start;
class pvp_player_info;
class msg_response_start;
class msg_response_start_call;
class msg_request_call;
class msg_response_call;
class msg_response_start_discard;
class card_info;
class msg_request_discard;
class msg_response_discard;

enum e_pvp_msgid {
  request_start = 20001,
  response_start = 20002,
  response_start_call = 20011,
  request_call = 20012,
  response_call = 20013,
  response_start_discard = 20021,
  request_discard = 20022,
  response_discard = 20023
};
bool e_pvp_msgid_IsValid(int value);
const e_pvp_msgid e_pvp_msgid_MIN = request_start;
const e_pvp_msgid e_pvp_msgid_MAX = response_discard;
const int e_pvp_msgid_ARRAYSIZE = e_pvp_msgid_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_pvp_msgid_descriptor();
inline const ::std::string& e_pvp_msgid_Name(e_pvp_msgid value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_pvp_msgid_descriptor(), value);
}
inline bool e_pvp_msgid_Parse(
    const ::std::string& name, e_pvp_msgid* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_pvp_msgid>(
    e_pvp_msgid_descriptor(), name, value);
}
// ===================================================================

class msg_request_start : public ::google::protobuf::Message {
 public:
  msg_request_start();
  virtual ~msg_request_start();

  msg_request_start(const msg_request_start& from);

  inline msg_request_start& operator=(const msg_request_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_start& default_instance();

  void Swap(msg_request_start* other);

  // implements Message ----------------------------------------------

  msg_request_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_start& from);
  void MergeFrom(const msg_request_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg_request_start)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_request_start* default_instance_;
};
// -------------------------------------------------------------------

class pvp_player_info : public ::google::protobuf::Message {
 public:
  pvp_player_info();
  virtual ~pvp_player_info();

  pvp_player_info(const pvp_player_info& from);

  inline pvp_player_info& operator=(const pvp_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pvp_player_info& default_instance();

  void Swap(pvp_player_info* other);

  // implements Message ----------------------------------------------

  pvp_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pvp_player_info& from);
  void MergeFrom(const pvp_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pvp_player_info)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static pvp_player_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_start : public ::google::protobuf::Message {
 public:
  msg_response_start();
  virtual ~msg_response_start();

  msg_response_start(const msg_response_start& from);

  inline msg_response_start& operator=(const msg_response_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_start& default_instance();

  void Swap(msg_response_start* other);

  // implements Message ----------------------------------------------

  msg_response_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_start& from);
  void MergeFrom(const msg_response_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roomid = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  inline ::google::protobuf::int64 roomid() const;
  inline void set_roomid(::google::protobuf::int64 value);

  // repeated .pvp_player_info players_info = 2;
  inline int players_info_size() const;
  inline void clear_players_info();
  static const int kPlayersInfoFieldNumber = 2;
  inline const ::pvp_player_info& players_info(int index) const;
  inline ::pvp_player_info* mutable_players_info(int index);
  inline ::pvp_player_info* add_players_info();
  inline const ::google::protobuf::RepeatedPtrField< ::pvp_player_info >&
      players_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::pvp_player_info >*
      mutable_players_info();

  // required int32 dz_info = 3;
  inline bool has_dz_info() const;
  inline void clear_dz_info();
  static const int kDzInfoFieldNumber = 3;
  inline ::google::protobuf::int32 dz_info() const;
  inline void set_dz_info(::google::protobuf::int32 value);

  // required int32 stance = 4;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 4;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // required bytes cards = 5;
  inline bool has_cards() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 5;
  inline const ::std::string& cards() const;
  inline void set_cards(const ::std::string& value);
  inline void set_cards(const char* value);
  inline void set_cards(const void* value, size_t size);
  inline ::std::string* mutable_cards();
  inline ::std::string* release_cards();
  inline void set_allocated_cards(::std::string* cards);

  // @@protoc_insertion_point(class_scope:msg_response_start)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_dz_info();
  inline void clear_has_dz_info();
  inline void set_has_stance();
  inline void clear_has_stance();
  inline void set_has_cards();
  inline void clear_has_cards();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roomid_;
  ::google::protobuf::RepeatedPtrField< ::pvp_player_info > players_info_;
  ::google::protobuf::int32 dz_info_;
  ::google::protobuf::int32 stance_;
  ::std::string* cards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_response_start* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_start_call : public ::google::protobuf::Message {
 public:
  msg_response_start_call();
  virtual ~msg_response_start_call();

  msg_response_start_call(const msg_response_start_call& from);

  inline msg_response_start_call& operator=(const msg_response_start_call& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_start_call& default_instance();

  void Swap(msg_response_start_call* other);

  // implements Message ----------------------------------------------

  msg_response_start_call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_start_call& from);
  void MergeFrom(const msg_response_start_call& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_response_start_call)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stance_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_response_start_call* default_instance_;
};
// -------------------------------------------------------------------

class msg_request_call : public ::google::protobuf::Message {
 public:
  msg_request_call();
  virtual ~msg_request_call();

  msg_request_call(const msg_request_call& from);

  inline msg_request_call& operator=(const msg_request_call& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_call& default_instance();

  void Swap(msg_request_call* other);

  // implements Message ----------------------------------------------

  msg_request_call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_call& from);
  void MergeFrom(const msg_request_call& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_request_call)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stance_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_request_call* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_call : public ::google::protobuf::Message {
 public:
  msg_response_call();
  virtual ~msg_response_call();

  msg_response_call(const msg_response_call& from);

  inline msg_response_call& operator=(const msg_response_call& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_call& default_instance();

  void Swap(msg_response_call* other);

  // implements Message ----------------------------------------------

  msg_response_call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_call& from);
  void MergeFrom(const msg_response_call& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required bytes call_cards = 3;
  inline bool has_call_cards() const;
  inline void clear_call_cards();
  static const int kCallCardsFieldNumber = 3;
  inline const ::std::string& call_cards() const;
  inline void set_call_cards(const ::std::string& value);
  inline void set_call_cards(const char* value);
  inline void set_call_cards(const void* value, size_t size);
  inline ::std::string* mutable_call_cards();
  inline ::std::string* release_call_cards();
  inline void set_allocated_call_cards(::std::string* call_cards);

  // @@protoc_insertion_point(class_scope:msg_response_call)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_call_cards();
  inline void clear_has_call_cards();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stance_;
  ::google::protobuf::int32 score_;
  ::std::string* call_cards_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_response_call* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_start_discard : public ::google::protobuf::Message {
 public:
  msg_response_start_discard();
  virtual ~msg_response_start_discard();

  msg_response_start_discard(const msg_response_start_discard& from);

  inline msg_response_start_discard& operator=(const msg_response_start_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_start_discard& default_instance();

  void Swap(msg_response_start_discard* other);

  // implements Message ----------------------------------------------

  msg_response_start_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_start_discard& from);
  void MergeFrom(const msg_response_start_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_response_start_discard)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stance_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_response_start_discard* default_instance_;
};
// -------------------------------------------------------------------

class card_info : public ::google::protobuf::Message {
 public:
  card_info();
  virtual ~card_info();

  card_info(const card_info& from);

  inline card_info& operator=(const card_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const card_info& default_instance();

  void Swap(card_info* other);

  // implements Message ----------------------------------------------

  card_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const card_info& from);
  void MergeFrom(const card_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .e_card_type card_type = 1;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 1;
  inline ::e_card_type card_type() const;
  inline void set_card_type(::e_card_type value);

  // required bytes cards1 = 2;
  inline bool has_cards1() const;
  inline void clear_cards1();
  static const int kCards1FieldNumber = 2;
  inline const ::std::string& cards1() const;
  inline void set_cards1(const ::std::string& value);
  inline void set_cards1(const char* value);
  inline void set_cards1(const void* value, size_t size);
  inline ::std::string* mutable_cards1();
  inline ::std::string* release_cards1();
  inline void set_allocated_cards1(::std::string* cards1);

  // required bytes cards2 = 3;
  inline bool has_cards2() const;
  inline void clear_cards2();
  static const int kCards2FieldNumber = 3;
  inline const ::std::string& cards2() const;
  inline void set_cards2(const ::std::string& value);
  inline void set_cards2(const char* value);
  inline void set_cards2(const void* value, size_t size);
  inline ::std::string* mutable_cards2();
  inline ::std::string* release_cards2();
  inline void set_allocated_cards2(::std::string* cards2);

  // @@protoc_insertion_point(class_scope:card_info)
 private:
  inline void set_has_card_type();
  inline void clear_has_card_type();
  inline void set_has_cards1();
  inline void clear_has_cards1();
  inline void set_has_cards2();
  inline void clear_has_cards2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cards1_;
  ::std::string* cards2_;
  int card_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static card_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_request_discard : public ::google::protobuf::Message {
 public:
  msg_request_discard();
  virtual ~msg_request_discard();

  msg_request_discard(const msg_request_discard& from);

  inline msg_request_discard& operator=(const msg_request_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_discard& default_instance();

  void Swap(msg_request_discard* other);

  // implements Message ----------------------------------------------

  msg_request_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_discard& from);
  void MergeFrom(const msg_request_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // optional .card_info cardinfo = 2;
  inline bool has_cardinfo() const;
  inline void clear_cardinfo();
  static const int kCardinfoFieldNumber = 2;
  inline const ::card_info& cardinfo() const;
  inline ::card_info* mutable_cardinfo();
  inline ::card_info* release_cardinfo();
  inline void set_allocated_cardinfo(::card_info* cardinfo);

  // @@protoc_insertion_point(class_scope:msg_request_discard)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();
  inline void set_has_cardinfo();
  inline void clear_has_cardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::card_info* cardinfo_;
  ::google::protobuf::int32 stance_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_request_discard* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_discard : public ::google::protobuf::Message {
 public:
  msg_response_discard();
  virtual ~msg_response_discard();

  msg_response_discard(const msg_response_discard& from);

  inline msg_response_discard& operator=(const msg_response_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_discard& default_instance();

  void Swap(msg_response_discard* other);

  // implements Message ----------------------------------------------

  msg_response_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_discard& from);
  void MergeFrom(const msg_response_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stance = 1;
  inline bool has_stance() const;
  inline void clear_stance();
  static const int kStanceFieldNumber = 1;
  inline ::google::protobuf::int32 stance() const;
  inline void set_stance(::google::protobuf::int32 value);

  // required int32 err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_response_discard)
 private:
  inline void set_has_stance();
  inline void clear_has_stance();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stance_;
  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pvp_2eproto();
  friend void protobuf_AssignDesc_pvp_2eproto();
  friend void protobuf_ShutdownFile_pvp_2eproto();

  void InitAsDefaultInstance();
  static msg_response_discard* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_request_start

// required int64 uid = 1;
inline bool msg_request_start::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_start::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_start::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_start::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 msg_request_start::uid() const {
  return uid_;
}
inline void msg_request_start::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// pvp_player_info

// required int64 uid = 1;
inline bool pvp_player_info::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pvp_player_info::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pvp_player_info::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pvp_player_info::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 pvp_player_info::uid() const {
  return uid_;
}
inline void pvp_player_info::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// msg_response_start

// required int64 roomid = 1;
inline bool msg_response_start::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_start::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_start::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_start::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::int64 msg_response_start::roomid() const {
  return roomid_;
}
inline void msg_response_start::set_roomid(::google::protobuf::int64 value) {
  set_has_roomid();
  roomid_ = value;
}

// repeated .pvp_player_info players_info = 2;
inline int msg_response_start::players_info_size() const {
  return players_info_.size();
}
inline void msg_response_start::clear_players_info() {
  players_info_.Clear();
}
inline const ::pvp_player_info& msg_response_start::players_info(int index) const {
  return players_info_.Get(index);
}
inline ::pvp_player_info* msg_response_start::mutable_players_info(int index) {
  return players_info_.Mutable(index);
}
inline ::pvp_player_info* msg_response_start::add_players_info() {
  return players_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pvp_player_info >&
msg_response_start::players_info() const {
  return players_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::pvp_player_info >*
msg_response_start::mutable_players_info() {
  return &players_info_;
}

// required int32 dz_info = 3;
inline bool msg_response_start::has_dz_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_response_start::set_has_dz_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_response_start::clear_has_dz_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_response_start::clear_dz_info() {
  dz_info_ = 0;
  clear_has_dz_info();
}
inline ::google::protobuf::int32 msg_response_start::dz_info() const {
  return dz_info_;
}
inline void msg_response_start::set_dz_info(::google::protobuf::int32 value) {
  set_has_dz_info();
  dz_info_ = value;
}

// required int32 stance = 4;
inline bool msg_response_start::has_stance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_response_start::set_has_stance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_response_start::clear_has_stance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_response_start::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_response_start::stance() const {
  return stance_;
}
inline void msg_response_start::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// required bytes cards = 5;
inline bool msg_response_start::has_cards() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_response_start::set_has_cards() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_response_start::clear_has_cards() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_response_start::clear_cards() {
  if (cards_ != &::google::protobuf::internal::kEmptyString) {
    cards_->clear();
  }
  clear_has_cards();
}
inline const ::std::string& msg_response_start::cards() const {
  return *cards_;
}
inline void msg_response_start::set_cards(const ::std::string& value) {
  set_has_cards();
  if (cards_ == &::google::protobuf::internal::kEmptyString) {
    cards_ = new ::std::string;
  }
  cards_->assign(value);
}
inline void msg_response_start::set_cards(const char* value) {
  set_has_cards();
  if (cards_ == &::google::protobuf::internal::kEmptyString) {
    cards_ = new ::std::string;
  }
  cards_->assign(value);
}
inline void msg_response_start::set_cards(const void* value, size_t size) {
  set_has_cards();
  if (cards_ == &::google::protobuf::internal::kEmptyString) {
    cards_ = new ::std::string;
  }
  cards_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_response_start::mutable_cards() {
  set_has_cards();
  if (cards_ == &::google::protobuf::internal::kEmptyString) {
    cards_ = new ::std::string;
  }
  return cards_;
}
inline ::std::string* msg_response_start::release_cards() {
  clear_has_cards();
  if (cards_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cards_;
    cards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_response_start::set_allocated_cards(::std::string* cards) {
  if (cards_ != &::google::protobuf::internal::kEmptyString) {
    delete cards_;
  }
  if (cards) {
    set_has_cards();
    cards_ = cards;
  } else {
    clear_has_cards();
    cards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// msg_response_start_call

// required int32 stance = 1;
inline bool msg_response_start_call::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_start_call::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_start_call::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_start_call::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_response_start_call::stance() const {
  return stance_;
}
inline void msg_response_start_call::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// -------------------------------------------------------------------

// msg_request_call

// required int32 stance = 1;
inline bool msg_request_call::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_call::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_call::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_call::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_request_call::stance() const {
  return stance_;
}
inline void msg_request_call::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// required int32 score = 2;
inline bool msg_request_call::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_request_call::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_request_call::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_request_call::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_request_call::score() const {
  return score_;
}
inline void msg_request_call::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// msg_response_call

// required int32 stance = 1;
inline bool msg_response_call::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_call::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_call::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_call::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_response_call::stance() const {
  return stance_;
}
inline void msg_response_call::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// required int32 score = 2;
inline bool msg_response_call::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_response_call::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_response_call::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_response_call::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_response_call::score() const {
  return score_;
}
inline void msg_response_call::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// required bytes call_cards = 3;
inline bool msg_response_call::has_call_cards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_response_call::set_has_call_cards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_response_call::clear_has_call_cards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_response_call::clear_call_cards() {
  if (call_cards_ != &::google::protobuf::internal::kEmptyString) {
    call_cards_->clear();
  }
  clear_has_call_cards();
}
inline const ::std::string& msg_response_call::call_cards() const {
  return *call_cards_;
}
inline void msg_response_call::set_call_cards(const ::std::string& value) {
  set_has_call_cards();
  if (call_cards_ == &::google::protobuf::internal::kEmptyString) {
    call_cards_ = new ::std::string;
  }
  call_cards_->assign(value);
}
inline void msg_response_call::set_call_cards(const char* value) {
  set_has_call_cards();
  if (call_cards_ == &::google::protobuf::internal::kEmptyString) {
    call_cards_ = new ::std::string;
  }
  call_cards_->assign(value);
}
inline void msg_response_call::set_call_cards(const void* value, size_t size) {
  set_has_call_cards();
  if (call_cards_ == &::google::protobuf::internal::kEmptyString) {
    call_cards_ = new ::std::string;
  }
  call_cards_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_response_call::mutable_call_cards() {
  set_has_call_cards();
  if (call_cards_ == &::google::protobuf::internal::kEmptyString) {
    call_cards_ = new ::std::string;
  }
  return call_cards_;
}
inline ::std::string* msg_response_call::release_call_cards() {
  clear_has_call_cards();
  if (call_cards_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = call_cards_;
    call_cards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_response_call::set_allocated_call_cards(::std::string* call_cards) {
  if (call_cards_ != &::google::protobuf::internal::kEmptyString) {
    delete call_cards_;
  }
  if (call_cards) {
    set_has_call_cards();
    call_cards_ = call_cards;
  } else {
    clear_has_call_cards();
    call_cards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// msg_response_start_discard

// required int32 stance = 1;
inline bool msg_response_start_discard::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_start_discard::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_start_discard::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_start_discard::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_response_start_discard::stance() const {
  return stance_;
}
inline void msg_response_start_discard::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// -------------------------------------------------------------------

// card_info

// required .e_card_type card_type = 1;
inline bool card_info::has_card_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void card_info::set_has_card_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void card_info::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void card_info::clear_card_type() {
  card_type_ = 0;
  clear_has_card_type();
}
inline ::e_card_type card_info::card_type() const {
  return static_cast< ::e_card_type >(card_type_);
}
inline void card_info::set_card_type(::e_card_type value) {
  assert(::e_card_type_IsValid(value));
  set_has_card_type();
  card_type_ = value;
}

// required bytes cards1 = 2;
inline bool card_info::has_cards1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void card_info::set_has_cards1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void card_info::clear_has_cards1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void card_info::clear_cards1() {
  if (cards1_ != &::google::protobuf::internal::kEmptyString) {
    cards1_->clear();
  }
  clear_has_cards1();
}
inline const ::std::string& card_info::cards1() const {
  return *cards1_;
}
inline void card_info::set_cards1(const ::std::string& value) {
  set_has_cards1();
  if (cards1_ == &::google::protobuf::internal::kEmptyString) {
    cards1_ = new ::std::string;
  }
  cards1_->assign(value);
}
inline void card_info::set_cards1(const char* value) {
  set_has_cards1();
  if (cards1_ == &::google::protobuf::internal::kEmptyString) {
    cards1_ = new ::std::string;
  }
  cards1_->assign(value);
}
inline void card_info::set_cards1(const void* value, size_t size) {
  set_has_cards1();
  if (cards1_ == &::google::protobuf::internal::kEmptyString) {
    cards1_ = new ::std::string;
  }
  cards1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* card_info::mutable_cards1() {
  set_has_cards1();
  if (cards1_ == &::google::protobuf::internal::kEmptyString) {
    cards1_ = new ::std::string;
  }
  return cards1_;
}
inline ::std::string* card_info::release_cards1() {
  clear_has_cards1();
  if (cards1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cards1_;
    cards1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void card_info::set_allocated_cards1(::std::string* cards1) {
  if (cards1_ != &::google::protobuf::internal::kEmptyString) {
    delete cards1_;
  }
  if (cards1) {
    set_has_cards1();
    cards1_ = cards1;
  } else {
    clear_has_cards1();
    cards1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes cards2 = 3;
inline bool card_info::has_cards2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void card_info::set_has_cards2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void card_info::clear_has_cards2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void card_info::clear_cards2() {
  if (cards2_ != &::google::protobuf::internal::kEmptyString) {
    cards2_->clear();
  }
  clear_has_cards2();
}
inline const ::std::string& card_info::cards2() const {
  return *cards2_;
}
inline void card_info::set_cards2(const ::std::string& value) {
  set_has_cards2();
  if (cards2_ == &::google::protobuf::internal::kEmptyString) {
    cards2_ = new ::std::string;
  }
  cards2_->assign(value);
}
inline void card_info::set_cards2(const char* value) {
  set_has_cards2();
  if (cards2_ == &::google::protobuf::internal::kEmptyString) {
    cards2_ = new ::std::string;
  }
  cards2_->assign(value);
}
inline void card_info::set_cards2(const void* value, size_t size) {
  set_has_cards2();
  if (cards2_ == &::google::protobuf::internal::kEmptyString) {
    cards2_ = new ::std::string;
  }
  cards2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* card_info::mutable_cards2() {
  set_has_cards2();
  if (cards2_ == &::google::protobuf::internal::kEmptyString) {
    cards2_ = new ::std::string;
  }
  return cards2_;
}
inline ::std::string* card_info::release_cards2() {
  clear_has_cards2();
  if (cards2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cards2_;
    cards2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void card_info::set_allocated_cards2(::std::string* cards2) {
  if (cards2_ != &::google::protobuf::internal::kEmptyString) {
    delete cards2_;
  }
  if (cards2) {
    set_has_cards2();
    cards2_ = cards2;
  } else {
    clear_has_cards2();
    cards2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// msg_request_discard

// required int32 stance = 1;
inline bool msg_request_discard::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_discard::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_discard::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_discard::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_request_discard::stance() const {
  return stance_;
}
inline void msg_request_discard::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// optional .card_info cardinfo = 2;
inline bool msg_request_discard::has_cardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_request_discard::set_has_cardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_request_discard::clear_has_cardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_request_discard::clear_cardinfo() {
  if (cardinfo_ != NULL) cardinfo_->::card_info::Clear();
  clear_has_cardinfo();
}
inline const ::card_info& msg_request_discard::cardinfo() const {
  return cardinfo_ != NULL ? *cardinfo_ : *default_instance_->cardinfo_;
}
inline ::card_info* msg_request_discard::mutable_cardinfo() {
  set_has_cardinfo();
  if (cardinfo_ == NULL) cardinfo_ = new ::card_info;
  return cardinfo_;
}
inline ::card_info* msg_request_discard::release_cardinfo() {
  clear_has_cardinfo();
  ::card_info* temp = cardinfo_;
  cardinfo_ = NULL;
  return temp;
}
inline void msg_request_discard::set_allocated_cardinfo(::card_info* cardinfo) {
  delete cardinfo_;
  cardinfo_ = cardinfo;
  if (cardinfo) {
    set_has_cardinfo();
  } else {
    clear_has_cardinfo();
  }
}

// -------------------------------------------------------------------

// msg_response_discard

// required int32 stance = 1;
inline bool msg_response_discard::has_stance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_discard::set_has_stance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_discard::clear_has_stance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_discard::clear_stance() {
  stance_ = 0;
  clear_has_stance();
}
inline ::google::protobuf::int32 msg_response_discard::stance() const {
  return stance_;
}
inline void msg_response_discard::set_stance(::google::protobuf::int32 value) {
  set_has_stance();
  stance_ = value;
}

// required int32 err = 2;
inline bool msg_response_discard::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_response_discard::set_has_err() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_response_discard::clear_has_err() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_response_discard::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 msg_response_discard::err() const {
  return err_;
}
inline void msg_response_discard::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_pvp_msgid>() {
  return ::e_pvp_msgid_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pvp_2eproto__INCLUDED
