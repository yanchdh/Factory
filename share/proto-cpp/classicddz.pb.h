// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: classicddz.proto

#ifndef PROTOBUF_classicddz_2eproto__INCLUDED
#define PROTOBUF_classicddz_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "poker.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_classicddz_2eproto();
void protobuf_AssignDesc_classicddz_2eproto();
void protobuf_ShutdownFile_classicddz_2eproto();

class msg_request_classicddz_start;
class classicddz_player_info;
class classicddz_dizhu_info;
class msg_response_classicddz_start;
class msg_request_classicddz_call;
class msg_response_classicddz_call;
class msg_response_classicddz_start_discard;
class msg_request_classicddz_discard;
class msg_response_classicddz_discard;
class msg_response_classicddz_end;

enum e_classic_doudizhu_card_type {
  e_card_0 = 0,
  e_card_1 = 65797,
  e_card_2 = 131331,
  e_card_3 = 196866,
  e_card_3_1 = 200978,
  e_card_3_2 = 205074,
  e_card_4 = 262400,
  e_card_4_1 = 266512,
  e_card_4_2_1 = 266528,
  e_card_4_2_2 = 270624
};
bool e_classic_doudizhu_card_type_IsValid(int value);
const e_classic_doudizhu_card_type e_classic_doudizhu_card_type_MIN = e_card_0;
const e_classic_doudizhu_card_type e_classic_doudizhu_card_type_MAX = e_card_4_2_2;
const int e_classic_doudizhu_card_type_ARRAYSIZE = e_classic_doudizhu_card_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_classic_doudizhu_card_type_descriptor();
inline const ::std::string& e_classic_doudizhu_card_type_Name(e_classic_doudizhu_card_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_classic_doudizhu_card_type_descriptor(), value);
}
inline bool e_classic_doudizhu_card_type_Parse(
    const ::std::string& name, e_classic_doudizhu_card_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_classic_doudizhu_card_type>(
    e_classic_doudizhu_card_type_descriptor(), name, value);
}
enum e_classicddz_msgid {
  request_classicddz_start = 20001,
  response_classicddz_start = 20002,
  request_classicddz_call = 20012,
  response_classicddz_call = 20013,
  response_classicddz_start_discard = 20021,
  request_classicddz_discard = 20022,
  response_classicddz_discard = 20023,
  response_classicddz_end = 20024
};
bool e_classicddz_msgid_IsValid(int value);
const e_classicddz_msgid e_classicddz_msgid_MIN = request_classicddz_start;
const e_classicddz_msgid e_classicddz_msgid_MAX = response_classicddz_end;
const int e_classicddz_msgid_ARRAYSIZE = e_classicddz_msgid_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_classicddz_msgid_descriptor();
inline const ::std::string& e_classicddz_msgid_Name(e_classicddz_msgid value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_classicddz_msgid_descriptor(), value);
}
inline bool e_classicddz_msgid_Parse(
    const ::std::string& name, e_classicddz_msgid* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_classicddz_msgid>(
    e_classicddz_msgid_descriptor(), name, value);
}
// ===================================================================

class msg_request_classicddz_start : public ::google::protobuf::Message {
 public:
  msg_request_classicddz_start();
  virtual ~msg_request_classicddz_start();

  msg_request_classicddz_start(const msg_request_classicddz_start& from);

  inline msg_request_classicddz_start& operator=(const msg_request_classicddz_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_classicddz_start& default_instance();

  void Swap(msg_request_classicddz_start* other);

  // implements Message ----------------------------------------------

  msg_request_classicddz_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_classicddz_start& from);
  void MergeFrom(const msg_request_classicddz_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg_request_classicddz_start)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_request_classicddz_start* default_instance_;
};
// -------------------------------------------------------------------

class classicddz_player_info : public ::google::protobuf::Message {
 public:
  classicddz_player_info();
  virtual ~classicddz_player_info();

  classicddz_player_info(const classicddz_player_info& from);

  inline classicddz_player_info& operator=(const classicddz_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const classicddz_player_info& default_instance();

  void Swap(classicddz_player_info* other);

  // implements Message ----------------------------------------------

  classicddz_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const classicddz_player_info& from);
  void MergeFrom(const classicddz_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // required int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:classicddz_player_info)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static classicddz_player_info* default_instance_;
};
// -------------------------------------------------------------------

class classicddz_dizhu_info : public ::google::protobuf::Message {
 public:
  classicddz_dizhu_info();
  virtual ~classicddz_dizhu_info();

  classicddz_dizhu_info(const classicddz_dizhu_info& from);

  inline classicddz_dizhu_info& operator=(const classicddz_dizhu_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const classicddz_dizhu_info& default_instance();

  void Swap(classicddz_dizhu_info* other);

  // implements Message ----------------------------------------------

  classicddz_dizhu_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const classicddz_dizhu_info& from);
  void MergeFrom(const classicddz_dizhu_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // required int32 cardId = 3;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 3;
  inline ::google::protobuf::int32 cardid() const;
  inline void set_cardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:classicddz_dizhu_info)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cardid();
  inline void clear_has_cardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 cardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static classicddz_dizhu_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_classicddz_start : public ::google::protobuf::Message {
 public:
  msg_response_classicddz_start();
  virtual ~msg_response_classicddz_start();

  msg_response_classicddz_start(const msg_response_classicddz_start& from);

  inline msg_response_classicddz_start& operator=(const msg_response_classicddz_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_classicddz_start& default_instance();

  void Swap(msg_response_classicddz_start* other);

  // implements Message ----------------------------------------------

  msg_response_classicddz_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_classicddz_start& from);
  void MergeFrom(const msg_response_classicddz_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tableId = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::int64 tableid() const;
  inline void set_tableid(::google::protobuf::int64 value);

  // repeated .classicddz_player_info playerInfo = 2;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::classicddz_player_info& playerinfo(int index) const;
  inline ::classicddz_player_info* mutable_playerinfo(int index);
  inline ::classicddz_player_info* add_playerinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::classicddz_player_info >&
      playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::classicddz_player_info >*
      mutable_playerinfo();

  // required .classicddz_dizhu_info dizhuInfo = 3;
  inline bool has_dizhuinfo() const;
  inline void clear_dizhuinfo();
  static const int kDizhuInfoFieldNumber = 3;
  inline const ::classicddz_dizhu_info& dizhuinfo() const;
  inline ::classicddz_dizhu_info* mutable_dizhuinfo();
  inline ::classicddz_dizhu_info* release_dizhuinfo();
  inline void set_allocated_dizhuinfo(::classicddz_dizhu_info* dizhuinfo);

  // required bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:msg_response_classicddz_start)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_dizhuinfo();
  inline void clear_has_dizhuinfo();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tableid_;
  ::google::protobuf::RepeatedPtrField< ::classicddz_player_info > playerinfo_;
  ::classicddz_dizhu_info* dizhuinfo_;
  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_response_classicddz_start* default_instance_;
};
// -------------------------------------------------------------------

class msg_request_classicddz_call : public ::google::protobuf::Message {
 public:
  msg_request_classicddz_call();
  virtual ~msg_request_classicddz_call();

  msg_request_classicddz_call(const msg_request_classicddz_call& from);

  inline msg_request_classicddz_call& operator=(const msg_request_classicddz_call& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_classicddz_call& default_instance();

  void Swap(msg_request_classicddz_call* other);

  // implements Message ----------------------------------------------

  msg_request_classicddz_call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_classicddz_call& from);
  void MergeFrom(const msg_request_classicddz_call& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tableId = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::int64 tableid() const;
  inline void set_tableid(::google::protobuf::int64 value);

  // required int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_request_classicddz_call)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tableid_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_request_classicddz_call* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_classicddz_call : public ::google::protobuf::Message {
 public:
  msg_response_classicddz_call();
  virtual ~msg_response_classicddz_call();

  msg_response_classicddz_call(const msg_response_classicddz_call& from);

  inline msg_response_classicddz_call& operator=(const msg_response_classicddz_call& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_classicddz_call& default_instance();

  void Swap(msg_response_classicddz_call* other);

  // implements Message ----------------------------------------------

  msg_response_classicddz_call* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_classicddz_call& from);
  void MergeFrom(const msg_response_classicddz_call& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 callSeat = 3;
  inline bool has_callseat() const;
  inline void clear_callseat();
  static const int kCallSeatFieldNumber = 3;
  inline ::google::protobuf::int32 callseat() const;
  inline void set_callseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_response_classicddz_call)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_callseat();
  inline void clear_has_callseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 callseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_response_classicddz_call* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_classicddz_start_discard : public ::google::protobuf::Message {
 public:
  msg_response_classicddz_start_discard();
  virtual ~msg_response_classicddz_start_discard();

  msg_response_classicddz_start_discard(const msg_response_classicddz_start_discard& from);

  inline msg_response_classicddz_start_discard& operator=(const msg_response_classicddz_start_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_classicddz_start_discard& default_instance();

  void Swap(msg_response_classicddz_start_discard* other);

  // implements Message ----------------------------------------------

  msg_response_classicddz_start_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_classicddz_start_discard& from);
  void MergeFrom(const msg_response_classicddz_start_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:msg_response_classicddz_start_discard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 score_;
  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_response_classicddz_start_discard* default_instance_;
};
// -------------------------------------------------------------------

class msg_request_classicddz_discard : public ::google::protobuf::Message {
 public:
  msg_request_classicddz_discard();
  virtual ~msg_request_classicddz_discard();

  msg_request_classicddz_discard(const msg_request_classicddz_discard& from);

  inline msg_request_classicddz_discard& operator=(const msg_request_classicddz_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_request_classicddz_discard& default_instance();

  void Swap(msg_request_classicddz_discard* other);

  // implements Message ----------------------------------------------

  msg_request_classicddz_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_request_classicddz_discard& from);
  void MergeFrom(const msg_request_classicddz_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tableId = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::int64 tableid() const;
  inline void set_tableid(::google::protobuf::int64 value);

  // required int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required .card_info cardInfo = 3;
  inline bool has_cardinfo() const;
  inline void clear_cardinfo();
  static const int kCardInfoFieldNumber = 3;
  inline const ::card_info& cardinfo() const;
  inline ::card_info* mutable_cardinfo();
  inline ::card_info* release_cardinfo();
  inline void set_allocated_cardinfo(::card_info* cardinfo);

  // @@protoc_insertion_point(class_scope:msg_request_classicddz_discard)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardinfo();
  inline void clear_has_cardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tableid_;
  ::card_info* cardinfo_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_request_classicddz_discard* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_classicddz_discard : public ::google::protobuf::Message {
 public:
  msg_response_classicddz_discard();
  virtual ~msg_response_classicddz_discard();

  msg_response_classicddz_discard(const msg_response_classicddz_discard& from);

  inline msg_response_classicddz_discard& operator=(const msg_response_classicddz_discard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_classicddz_discard& default_instance();

  void Swap(msg_response_classicddz_discard* other);

  // implements Message ----------------------------------------------

  msg_response_classicddz_discard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_classicddz_discard& from);
  void MergeFrom(const msg_response_classicddz_discard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // required .card_info cardInfo = 2;
  inline bool has_cardinfo() const;
  inline void clear_cardinfo();
  static const int kCardInfoFieldNumber = 2;
  inline const ::card_info& cardinfo() const;
  inline ::card_info* mutable_cardinfo();
  inline ::card_info* release_cardinfo();
  inline void set_allocated_cardinfo(::card_info* cardinfo);

  // @@protoc_insertion_point(class_scope:msg_response_classicddz_discard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardinfo();
  inline void clear_has_cardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::card_info* cardinfo_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_response_classicddz_discard* default_instance_;
};
// -------------------------------------------------------------------

class msg_response_classicddz_end : public ::google::protobuf::Message {
 public:
  msg_response_classicddz_end();
  virtual ~msg_response_classicddz_end();

  msg_response_classicddz_end(const msg_response_classicddz_end& from);

  inline msg_response_classicddz_end& operator=(const msg_response_classicddz_end& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_response_classicddz_end& default_instance();

  void Swap(msg_response_classicddz_end* other);

  // implements Message ----------------------------------------------

  msg_response_classicddz_end* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_response_classicddz_end& from);
  void MergeFrom(const msg_response_classicddz_end& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isDiZhuWin = 1;
  inline bool has_isdizhuwin() const;
  inline void clear_isdizhuwin();
  static const int kIsDiZhuWinFieldNumber = 1;
  inline bool isdizhuwin() const;
  inline void set_isdizhuwin(bool value);

  // @@protoc_insertion_point(class_scope:msg_response_classicddz_end)
 private:
  inline void set_has_isdizhuwin();
  inline void clear_has_isdizhuwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isdizhuwin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_classicddz_2eproto();
  friend void protobuf_AssignDesc_classicddz_2eproto();
  friend void protobuf_ShutdownFile_classicddz_2eproto();

  void InitAsDefaultInstance();
  static msg_response_classicddz_end* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_request_classicddz_start

// required int64 uid = 1;
inline bool msg_request_classicddz_start::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_classicddz_start::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_classicddz_start::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_classicddz_start::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 msg_request_classicddz_start::uid() const {
  return uid_;
}
inline void msg_request_classicddz_start::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// classicddz_player_info

// required int64 uid = 1;
inline bool classicddz_player_info::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void classicddz_player_info::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void classicddz_player_info::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void classicddz_player_info::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 classicddz_player_info::uid() const {
  return uid_;
}
inline void classicddz_player_info::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// required int32 seat = 2;
inline bool classicddz_player_info::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void classicddz_player_info::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void classicddz_player_info::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void classicddz_player_info::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 classicddz_player_info::seat() const {
  return seat_;
}
inline void classicddz_player_info::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// classicddz_dizhu_info

// required int32 seat = 1;
inline bool classicddz_dizhu_info::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void classicddz_dizhu_info::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void classicddz_dizhu_info::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void classicddz_dizhu_info::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 classicddz_dizhu_info::seat() const {
  return seat_;
}
inline void classicddz_dizhu_info::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required int32 pos = 2;
inline bool classicddz_dizhu_info::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void classicddz_dizhu_info::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void classicddz_dizhu_info::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void classicddz_dizhu_info::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 classicddz_dizhu_info::pos() const {
  return pos_;
}
inline void classicddz_dizhu_info::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// required int32 cardId = 3;
inline bool classicddz_dizhu_info::has_cardid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void classicddz_dizhu_info::set_has_cardid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void classicddz_dizhu_info::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void classicddz_dizhu_info::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 classicddz_dizhu_info::cardid() const {
  return cardid_;
}
inline void classicddz_dizhu_info::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
}

// -------------------------------------------------------------------

// msg_response_classicddz_start

// required int64 tableId = 1;
inline bool msg_response_classicddz_start::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_classicddz_start::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_classicddz_start::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_classicddz_start::clear_tableid() {
  tableid_ = GOOGLE_LONGLONG(0);
  clear_has_tableid();
}
inline ::google::protobuf::int64 msg_response_classicddz_start::tableid() const {
  return tableid_;
}
inline void msg_response_classicddz_start::set_tableid(::google::protobuf::int64 value) {
  set_has_tableid();
  tableid_ = value;
}

// repeated .classicddz_player_info playerInfo = 2;
inline int msg_response_classicddz_start::playerinfo_size() const {
  return playerinfo_.size();
}
inline void msg_response_classicddz_start::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::classicddz_player_info& msg_response_classicddz_start::playerinfo(int index) const {
  return playerinfo_.Get(index);
}
inline ::classicddz_player_info* msg_response_classicddz_start::mutable_playerinfo(int index) {
  return playerinfo_.Mutable(index);
}
inline ::classicddz_player_info* msg_response_classicddz_start::add_playerinfo() {
  return playerinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::classicddz_player_info >&
msg_response_classicddz_start::playerinfo() const {
  return playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::classicddz_player_info >*
msg_response_classicddz_start::mutable_playerinfo() {
  return &playerinfo_;
}

// required .classicddz_dizhu_info dizhuInfo = 3;
inline bool msg_response_classicddz_start::has_dizhuinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_response_classicddz_start::set_has_dizhuinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_response_classicddz_start::clear_has_dizhuinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_response_classicddz_start::clear_dizhuinfo() {
  if (dizhuinfo_ != NULL) dizhuinfo_->::classicddz_dizhu_info::Clear();
  clear_has_dizhuinfo();
}
inline const ::classicddz_dizhu_info& msg_response_classicddz_start::dizhuinfo() const {
  return dizhuinfo_ != NULL ? *dizhuinfo_ : *default_instance_->dizhuinfo_;
}
inline ::classicddz_dizhu_info* msg_response_classicddz_start::mutable_dizhuinfo() {
  set_has_dizhuinfo();
  if (dizhuinfo_ == NULL) dizhuinfo_ = new ::classicddz_dizhu_info;
  return dizhuinfo_;
}
inline ::classicddz_dizhu_info* msg_response_classicddz_start::release_dizhuinfo() {
  clear_has_dizhuinfo();
  ::classicddz_dizhu_info* temp = dizhuinfo_;
  dizhuinfo_ = NULL;
  return temp;
}
inline void msg_response_classicddz_start::set_allocated_dizhuinfo(::classicddz_dizhu_info* dizhuinfo) {
  delete dizhuinfo_;
  dizhuinfo_ = dizhuinfo;
  if (dizhuinfo) {
    set_has_dizhuinfo();
  } else {
    clear_has_dizhuinfo();
  }
}

// required bytes data = 4;
inline bool msg_response_classicddz_start::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_response_classicddz_start::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_response_classicddz_start::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_response_classicddz_start::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& msg_response_classicddz_start::data() const {
  return *data_;
}
inline void msg_response_classicddz_start::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void msg_response_classicddz_start::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void msg_response_classicddz_start::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_response_classicddz_start::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* msg_response_classicddz_start::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_response_classicddz_start::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// msg_request_classicddz_call

// required int64 tableId = 1;
inline bool msg_request_classicddz_call::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_classicddz_call::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_classicddz_call::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_classicddz_call::clear_tableid() {
  tableid_ = GOOGLE_LONGLONG(0);
  clear_has_tableid();
}
inline ::google::protobuf::int64 msg_request_classicddz_call::tableid() const {
  return tableid_;
}
inline void msg_request_classicddz_call::set_tableid(::google::protobuf::int64 value) {
  set_has_tableid();
  tableid_ = value;
}

// required int32 seat = 2;
inline bool msg_request_classicddz_call::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_request_classicddz_call::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_request_classicddz_call::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_request_classicddz_call::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 msg_request_classicddz_call::seat() const {
  return seat_;
}
inline void msg_request_classicddz_call::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required int32 score = 3;
inline bool msg_request_classicddz_call::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_request_classicddz_call::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_request_classicddz_call::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_request_classicddz_call::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_request_classicddz_call::score() const {
  return score_;
}
inline void msg_request_classicddz_call::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// msg_response_classicddz_call

// required int32 seat = 1;
inline bool msg_response_classicddz_call::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_classicddz_call::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_classicddz_call::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_classicddz_call::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 msg_response_classicddz_call::seat() const {
  return seat_;
}
inline void msg_response_classicddz_call::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required int32 score = 2;
inline bool msg_response_classicddz_call::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_response_classicddz_call::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_response_classicddz_call::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_response_classicddz_call::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_response_classicddz_call::score() const {
  return score_;
}
inline void msg_response_classicddz_call::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 callSeat = 3;
inline bool msg_response_classicddz_call::has_callseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_response_classicddz_call::set_has_callseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_response_classicddz_call::clear_has_callseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_response_classicddz_call::clear_callseat() {
  callseat_ = 0;
  clear_has_callseat();
}
inline ::google::protobuf::int32 msg_response_classicddz_call::callseat() const {
  return callseat_;
}
inline void msg_response_classicddz_call::set_callseat(::google::protobuf::int32 value) {
  set_has_callseat();
  callseat_ = value;
}

// -------------------------------------------------------------------

// msg_response_classicddz_start_discard

// required int32 seat = 1;
inline bool msg_response_classicddz_start_discard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_classicddz_start_discard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_classicddz_start_discard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_classicddz_start_discard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 msg_response_classicddz_start_discard::seat() const {
  return seat_;
}
inline void msg_response_classicddz_start_discard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required int32 score = 2;
inline bool msg_response_classicddz_start_discard::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_response_classicddz_start_discard::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_response_classicddz_start_discard::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_response_classicddz_start_discard::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 msg_response_classicddz_start_discard::score() const {
  return score_;
}
inline void msg_response_classicddz_start_discard::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// required bytes data = 3;
inline bool msg_response_classicddz_start_discard::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_response_classicddz_start_discard::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_response_classicddz_start_discard::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_response_classicddz_start_discard::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& msg_response_classicddz_start_discard::data() const {
  return *data_;
}
inline void msg_response_classicddz_start_discard::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void msg_response_classicddz_start_discard::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void msg_response_classicddz_start_discard::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_response_classicddz_start_discard::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* msg_response_classicddz_start_discard::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_response_classicddz_start_discard::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// msg_request_classicddz_discard

// required int64 tableId = 1;
inline bool msg_request_classicddz_discard::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_request_classicddz_discard::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_request_classicddz_discard::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_request_classicddz_discard::clear_tableid() {
  tableid_ = GOOGLE_LONGLONG(0);
  clear_has_tableid();
}
inline ::google::protobuf::int64 msg_request_classicddz_discard::tableid() const {
  return tableid_;
}
inline void msg_request_classicddz_discard::set_tableid(::google::protobuf::int64 value) {
  set_has_tableid();
  tableid_ = value;
}

// required int32 seat = 2;
inline bool msg_request_classicddz_discard::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_request_classicddz_discard::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_request_classicddz_discard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_request_classicddz_discard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 msg_request_classicddz_discard::seat() const {
  return seat_;
}
inline void msg_request_classicddz_discard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required .card_info cardInfo = 3;
inline bool msg_request_classicddz_discard::has_cardinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_request_classicddz_discard::set_has_cardinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_request_classicddz_discard::clear_has_cardinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_request_classicddz_discard::clear_cardinfo() {
  if (cardinfo_ != NULL) cardinfo_->::card_info::Clear();
  clear_has_cardinfo();
}
inline const ::card_info& msg_request_classicddz_discard::cardinfo() const {
  return cardinfo_ != NULL ? *cardinfo_ : *default_instance_->cardinfo_;
}
inline ::card_info* msg_request_classicddz_discard::mutable_cardinfo() {
  set_has_cardinfo();
  if (cardinfo_ == NULL) cardinfo_ = new ::card_info;
  return cardinfo_;
}
inline ::card_info* msg_request_classicddz_discard::release_cardinfo() {
  clear_has_cardinfo();
  ::card_info* temp = cardinfo_;
  cardinfo_ = NULL;
  return temp;
}
inline void msg_request_classicddz_discard::set_allocated_cardinfo(::card_info* cardinfo) {
  delete cardinfo_;
  cardinfo_ = cardinfo;
  if (cardinfo) {
    set_has_cardinfo();
  } else {
    clear_has_cardinfo();
  }
}

// -------------------------------------------------------------------

// msg_response_classicddz_discard

// required int32 seat = 1;
inline bool msg_response_classicddz_discard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_classicddz_discard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_classicddz_discard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_classicddz_discard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 msg_response_classicddz_discard::seat() const {
  return seat_;
}
inline void msg_response_classicddz_discard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// required .card_info cardInfo = 2;
inline bool msg_response_classicddz_discard::has_cardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_response_classicddz_discard::set_has_cardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_response_classicddz_discard::clear_has_cardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_response_classicddz_discard::clear_cardinfo() {
  if (cardinfo_ != NULL) cardinfo_->::card_info::Clear();
  clear_has_cardinfo();
}
inline const ::card_info& msg_response_classicddz_discard::cardinfo() const {
  return cardinfo_ != NULL ? *cardinfo_ : *default_instance_->cardinfo_;
}
inline ::card_info* msg_response_classicddz_discard::mutable_cardinfo() {
  set_has_cardinfo();
  if (cardinfo_ == NULL) cardinfo_ = new ::card_info;
  return cardinfo_;
}
inline ::card_info* msg_response_classicddz_discard::release_cardinfo() {
  clear_has_cardinfo();
  ::card_info* temp = cardinfo_;
  cardinfo_ = NULL;
  return temp;
}
inline void msg_response_classicddz_discard::set_allocated_cardinfo(::card_info* cardinfo) {
  delete cardinfo_;
  cardinfo_ = cardinfo;
  if (cardinfo) {
    set_has_cardinfo();
  } else {
    clear_has_cardinfo();
  }
}

// -------------------------------------------------------------------

// msg_response_classicddz_end

// required bool isDiZhuWin = 1;
inline bool msg_response_classicddz_end::has_isdizhuwin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_response_classicddz_end::set_has_isdizhuwin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_response_classicddz_end::clear_has_isdizhuwin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_response_classicddz_end::clear_isdizhuwin() {
  isdizhuwin_ = false;
  clear_has_isdizhuwin();
}
inline bool msg_response_classicddz_end::isdizhuwin() const {
  return isdizhuwin_;
}
inline void msg_response_classicddz_end::set_isdizhuwin(bool value) {
  set_has_isdizhuwin();
  isdizhuwin_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_classic_doudizhu_card_type>() {
  return ::e_classic_doudizhu_card_type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_classicddz_msgid>() {
  return ::e_classicddz_msgid_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_classicddz_2eproto__INCLUDED
